#!/bin/sh
set -ex

## This can't be done with user www-data and is obsolete regardless
## For production, app must be copied to /root/init
if [ ! -z "$(ls -A /. | grep init)" ]; then

  ## Using the condition with `-a` will evaluate it and throw an error
  ## Although the first condition fails. This way it won't throw errors
  if [ "$(ls -A /init | wc -l)" -gt 0 ]; then
    echo "Updating code into volume"

    cp -ru /init/* ${WORKDIR}/
    rm -rf /init/*

  fi

fi

## Composer generate autoload files
## These ones needs auth.json
# composer u --no-cache
composer -o dump-autoload # doesn't need auth

## Removing old env.php becuase it can break setup if
## database has not yet been set
if [ -f ${WORKDIR}/app/etc/env.php ]; then
    rm -f ${WORKDIR}/app/etc/env.php
fi

## Magento install config
php $WORKDIR/bin/magento \
  setup:install \
  --base-url=${VIRTUAL_PROTO}://${VIRTUAL_HOST}/ \
  --db-host=${MYSQL_HOST} \
  --db-name=${MYSQL_DATABASE} \
  --db-user=${MYSQL_USER} \
  --db-password=${MYSQL_PASSWORD} \
  --backend-frontname=${BACKEND_FRONTNAME} \
  --admin-firstname=${ADMIN_FIRSTNAME} \
  --admin-lastname=${ADMIN_LASTNAME} \
  --admin-email=${ADMIN_EMAIL} \
  --admin-user=${ADMIN_USERNAME} \
  --admin-password=${ADMIN_PASSWORD} \
  --language=${LANGUAGE} \
  --currency=${CURRENCY} \
  --timezone=${TIMEZONE} \
  --use-rewrites=${REWRITES_ENABLED}

## Magento redis enable as session manager
php $WORKDIR/bin/magento -n \
  setup:config:set \
  --session-save=redis \
  --session-save-redis-host=${REDIS_HOST} \
  --session-save-redis-log-level=3 \
  --session-save-redis-db=2

## Magento redis as default caching
php $WORKDIR/bin/magento -n \
  setup:config:set \
  --cache-backend=redis \
  --cache-backend-redis-server=${REDIS_HOST} \
  --cache-backend-redis-db=0

## Magento redis full page cache
php $WORKDIR/bin/magento -n \
  setup:config:set \
  --page-cache=redis \
  --page-cache-redis-server=${REDIS_HOST} \
  --page-cache-redis-db=1

## Enabling Varnish
php $WORKDIR/bin/magento -n \
  setup:config:set \
  --http-cache-hosts=${VARNISH_HOST}

php $WORKDIR/bin/magento -n \
  config:set \
  --scope=default \
  --scope-code=0 \
  system/full_page_cache/caching_application 2

## Configuring Elasticsearch
php $WORKDIR/bin/magento config:set catalog/search/engine 'elasticsearch7'
php $WORKDIR/bin/magento config:set catalog/search/elasticsearch7_server_hostname ${ELASTICSEARCH_HOST}

## Setting Magento mode
php $WORKDIR/bin/magento \
  deploy:mode:set \
  ${MAGENTO_MODE}

## Cleaning var cache and setting permissions
cd $WORKDIR/var && rm -rf var/cache/* di/* generation/* page_cache/* && cd $WORKDIR
chmod -R 0777 $WORKDIR/generated
chmod -R 0777 $WORKDIR/var

exit 0
