version: '3.5'
services:

  ## Magento
  php7: # Main container
    image: ${REGISTRY}/${PROJECT_NAME}/php7:${VERSION}
    restart: always
    env_file:
      - ../config/${ENVIRONMENT}/php.env
    volumes:
      - backend_:/www
    networks:
      - tier_2
      - tier_log
  startup: # Init container
    image: ${REGISTRY}/${PROJECT_NAME}/php7:${VERSION}
    env_file:
      - ../config/${ENVIRONMENT}/php.env
    volumes:
      - backend_:/www
    entrypoint: "magento-setup"
    depends_on:
      - php7
      - mysql
      - redis
      - elasticsearch
    networks:
      - tier_2
      - tier_log
  cron: # Sidecar container
    image: ${REGISTRY}/${PROJECT_NAME}/php7:${VERSION}
    env_file:
      - ../config/${ENVIRONMENT}/php.env
    volumes:
      - backend_:/www
    entrypoint: "magento-cron"
    restart: always
    depends_on:
      - php7
      - startup
    networks:
      - tier_2
      - tier_log

  ## Nginx
  nginx: # Sidecar container
    image: ${REGISTRY}/${PROJECT_NAME}/nginx:${VERSION}
    restart: always
    env_file:
      - ../config/${ENVIRONMENT}/nginx.env
    volumes:
      - backend_:/www
    networks:
      tier_2:
        aliases:
          - backend.endpoint.internal
      tier_log:

  ## MySQL
  mysql: # Deployment
    image: '${REGISTRY}/${PROJECT_NAME}/mariadb:${VERSION}'
    restart: always
    env_file:
      - ../config/${ENVIRONMENT}/mysql.env
    volumes:
      - 'mysql_:/var/lib/mysql'
    networks:
      - tier_2
      - tier_log

  # VARNISH
  varnish: # Deployment
    image: ${REGISTRY}/${PROJECT_NAME}/varnish:${VERSION}
    restart: always
    env_file:
      - ../config/${ENVIRONMENT}/varnish.env
    # tmpfs: /usr/local/var/varnish:exec
    networks:
      - tier_2
      - tier_1
      - tier_log

  # REDIS
  redis: # Deployment
    image: ${REGISTRY}/${PROJECT_NAME}/redis:${VERSION}
    volumes:
      - redis_:/data
    restart: always
    networks:
      - tier_2
      - tier_log

  # ElasticSearch
  elasticsearch: # Deployment
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.4.3
    restart: always
    volumes:
      - elasticsearch_:/usr/share/elasticsearch/data
    networks:
      - tier_2
      - tier_log

volumes:
  redis_: null
  mysql_: null
  backend_: null
  elasticsearch_: null

networks:
  # Internet
  tier_0: null
  # Load balancer
  tier_1:
    external:
      name: front-tier
  # Internal network
  tier_2:
    internal: true
  # Dedicated to logging
  tier_log: null
